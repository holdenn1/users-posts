{"id":"js/index.js","dependencies":[{"name":"C:\\Progects\\users-posts\\package.json","includedInParent":true,"mtime":1671866573096}],"generated":{"js":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar users = document.querySelector('.users');\nvar filterUsersContainer = document.querySelector('.users-filter-contant');\nvar usersOnLoad = document.getElementsByClassName('users__link');\nvar searchBtn = document.querySelector('.search-btn');\nvar spinner = document.querySelector('.lds-default');\nvar contantSpinner = document.querySelector('.load-contant');\nvar err = document.querySelector('.error');\nvar observer;\nwindow.onload = function () {\n  loadUsers();\n  searchBtn.addEventListener('click', function () {\n    filter.classList.remove('filter_active');\n    searchUsers();\n  });\n};\nfunction addUsers(_x) {\n  return _addUsers.apply(this, arguments);\n}\nfunction _addUsers() {\n  _addUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(start) {\n    var limit, response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          limit = 8;\n          _context.next = 3;\n          return fetch(\"http://localhost:3000/users?_start=\".concat(start, \"&_limit=\").concat(limit));\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return response.json();\n        case 6:\n          data = _context.sent;\n          data.forEach(function (element) {\n            var id = element.id,\n              name = element.name,\n              age = element.age,\n              photo = element.photo,\n              city = element.address.city,\n              website = element.website;\n            users.insertAdjacentHTML('beforeend', \"<a class=\\\"users__link\\\"\\n\\t\\t\\t\\ttarget=\\\"_blank\\\"\\n\\t\\t\\t\\thref=\\\"./pages/user-page.html?id=\".concat(id, \"\\\">\\n\\t\\t\\t\\t<div id=\").concat(id, \" class=\\\"users__item\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"users__header\\\">\\n\\t\\t\\t\\t\\t\\t<img\\n\\t\\t\\t\\t\\t\\t\\tclass=\\\"users__img\\\"\\n\\t\\t\\t\\t\\t\\t\\tsrc=\\\"\").concat(photo, \"\\\"\\n\\t\\t\\t\\t\\t\\t\\talt=\\\"\\\"\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"users__main\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"users__name\\\">\").concat(name, \"</h4>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"users__age\\\">\").concat(age, \" y. o.</p>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"users__city\\\">City: \").concat(city, \"</p>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"users__website\\\">\").concat(website, \"</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</a>\"));\n          });\n          return _context.abrupt(\"return\", {\n            hasMore: data.length === limit\n          });\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _addUsers.apply(this, arguments);\n}\nfunction loadUsers() {\n  return _loadUsers.apply(this, arguments);\n}\nfunction _loadUsers() {\n  _loadUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _yield$addUsers, hasMore;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          spinner.style.display = 'flex';\n          _context2.next = 4;\n          return addUsers(0);\n        case 4:\n          _yield$addUsers = _context2.sent;\n          hasMore = _yield$addUsers.hasMore;\n          if (hasMore) {\n            observer = observContant();\n          }\n          _context2.next = 14;\n          break;\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          err.style.display = 'flex';\n          err.insertAdjacentHTML('afterbegin', \"<h4 class=\\\"error-text\\\">Error: Users not found</h4>\");\n        case 14:\n          _context2.prev = 14;\n          spinner.style.display = 'none';\n          return _context2.finish(14);\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 9, 14, 17]]);\n  }));\n  return _loadUsers.apply(this, arguments);\n}\nfunction loadMoreUsers() {\n  return _loadMoreUsers.apply(this, arguments);\n}\nfunction _loadMoreUsers() {\n  _loadMoreUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var _yield$addUsers2, hasMore;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          contantSpinner.style.height = 'auto';\n          _context3.next = 4;\n          return addUsers(usersOnLoad.length);\n        case 4:\n          _yield$addUsers2 = _context3.sent;\n          hasMore = _yield$addUsers2.hasMore;\n          if (!hasMore && observer) {\n            observer.disconnect();\n          }\n          _context3.next = 12;\n          break;\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n        case 12:\n          _context3.prev = 12;\n          contantSpinner.style.height = '0';\n          return _context3.finish(12);\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[0, 9, 12, 15]]);\n  }));\n  return _loadMoreUsers.apply(this, arguments);\n}\nfunction observContant() {\n  var observer = new IntersectionObserver(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n      isIntersecting = _ref2[0].isIntersecting;\n    if (isIntersecting) {\n      loadMoreUsers();\n    }\n  });\n  observer.observe(contantSpinner);\n  return observer;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/index.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":12},"source":"js/index.js","original":{"line":1,"column":12}},{"generated":{"line":3,"column":0},"source":"js/index.js","original":{"line":1,"column":13}},{"generated":{"line":4,"column":0},"source":"js/index.js","original":{"line":1,"column":13}},{"generated":{"line":4,"column":47},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":5,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":6,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":11,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"js/index.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":4},"source":"js/index.js","original":{"line":5,"column":6},"name":"users"},{"generated":{"line":13,"column":9},"source":"js/index.js","original":{"line":5,"column":11}},{"generated":{"line":13,"column":12},"source":"js/index.js","original":{"line":5,"column":14},"name":"document"},{"generated":{"line":13,"column":20},"source":"js/index.js","original":{"line":5,"column":22}},{"generated":{"line":13,"column":21},"source":"js/index.js","original":{"line":5,"column":23},"name":"querySelector"},{"generated":{"line":13,"column":34},"source":"js/index.js","original":{"line":5,"column":36}},{"generated":{"line":13,"column":35},"source":"js/index.js","original":{"line":5,"column":37}},{"generated":{"line":13,"column":43},"source":"js/index.js","original":{"line":5,"column":45}},{"generated":{"line":13,"column":44},"source":"js/index.js","original":{"line":5,"column":46}},{"generated":{"line":14,"column":0},"source":"js/index.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":4},"source":"js/index.js","original":{"line":6,"column":6},"name":"filterUsersContainer"},{"generated":{"line":14,"column":24},"source":"js/index.js","original":{"line":6,"column":26}},{"generated":{"line":14,"column":27},"source":"js/index.js","original":{"line":6,"column":29},"name":"document"},{"generated":{"line":14,"column":35},"source":"js/index.js","original":{"line":6,"column":37}},{"generated":{"line":14,"column":36},"source":"js/index.js","original":{"line":6,"column":38},"name":"querySelector"},{"generated":{"line":14,"column":49},"source":"js/index.js","original":{"line":6,"column":51}},{"generated":{"line":14,"column":50},"source":"js/index.js","original":{"line":6,"column":52}},{"generated":{"line":14,"column":73},"source":"js/index.js","original":{"line":6,"column":75}},{"generated":{"line":14,"column":74},"source":"js/index.js","original":{"line":6,"column":76}},{"generated":{"line":15,"column":0},"source":"js/index.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":4},"source":"js/index.js","original":{"line":7,"column":6},"name":"usersOnLoad"},{"generated":{"line":15,"column":15},"source":"js/index.js","original":{"line":7,"column":17}},{"generated":{"line":15,"column":18},"source":"js/index.js","original":{"line":7,"column":20},"name":"document"},{"generated":{"line":15,"column":26},"source":"js/index.js","original":{"line":7,"column":28}},{"generated":{"line":15,"column":27},"source":"js/index.js","original":{"line":7,"column":29},"name":"getElementsByClassName"},{"generated":{"line":15,"column":49},"source":"js/index.js","original":{"line":7,"column":51}},{"generated":{"line":15,"column":50},"source":"js/index.js","original":{"line":7,"column":52}},{"generated":{"line":15,"column":63},"source":"js/index.js","original":{"line":7,"column":65}},{"generated":{"line":15,"column":64},"source":"js/index.js","original":{"line":7,"column":66}},{"generated":{"line":16,"column":0},"source":"js/index.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":4},"source":"js/index.js","original":{"line":8,"column":6},"name":"searchBtn"},{"generated":{"line":16,"column":13},"source":"js/index.js","original":{"line":8,"column":15}},{"generated":{"line":16,"column":16},"source":"js/index.js","original":{"line":8,"column":18},"name":"document"},{"generated":{"line":16,"column":24},"source":"js/index.js","original":{"line":8,"column":26}},{"generated":{"line":16,"column":25},"source":"js/index.js","original":{"line":8,"column":27},"name":"querySelector"},{"generated":{"line":16,"column":38},"source":"js/index.js","original":{"line":8,"column":40}},{"generated":{"line":16,"column":39},"source":"js/index.js","original":{"line":8,"column":41}},{"generated":{"line":16,"column":52},"source":"js/index.js","original":{"line":8,"column":54}},{"generated":{"line":16,"column":53},"source":"js/index.js","original":{"line":8,"column":55}},{"generated":{"line":17,"column":0},"source":"js/index.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":4},"source":"js/index.js","original":{"line":9,"column":6},"name":"spinner"},{"generated":{"line":17,"column":11},"source":"js/index.js","original":{"line":9,"column":13}},{"generated":{"line":17,"column":14},"source":"js/index.js","original":{"line":9,"column":16},"name":"document"},{"generated":{"line":17,"column":22},"source":"js/index.js","original":{"line":9,"column":24}},{"generated":{"line":17,"column":23},"source":"js/index.js","original":{"line":9,"column":25},"name":"querySelector"},{"generated":{"line":17,"column":36},"source":"js/index.js","original":{"line":9,"column":38}},{"generated":{"line":17,"column":37},"source":"js/index.js","original":{"line":9,"column":39}},{"generated":{"line":17,"column":51},"source":"js/index.js","original":{"line":9,"column":53}},{"generated":{"line":17,"column":52},"source":"js/index.js","original":{"line":9,"column":54}},{"generated":{"line":18,"column":0},"source":"js/index.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":4},"source":"js/index.js","original":{"line":10,"column":6},"name":"contantSpinner"},{"generated":{"line":18,"column":18},"source":"js/index.js","original":{"line":10,"column":20}},{"generated":{"line":18,"column":21},"source":"js/index.js","original":{"line":10,"column":23},"name":"document"},{"generated":{"line":18,"column":29},"source":"js/index.js","original":{"line":10,"column":31}},{"generated":{"line":18,"column":30},"source":"js/index.js","original":{"line":10,"column":32},"name":"querySelector"},{"generated":{"line":18,"column":43},"source":"js/index.js","original":{"line":10,"column":45}},{"generated":{"line":18,"column":44},"source":"js/index.js","original":{"line":10,"column":46}},{"generated":{"line":18,"column":59},"source":"js/index.js","original":{"line":10,"column":61}},{"generated":{"line":18,"column":60},"source":"js/index.js","original":{"line":10,"column":62}},{"generated":{"line":19,"column":0},"source":"js/index.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":4},"source":"js/index.js","original":{"line":11,"column":6},"name":"err"},{"generated":{"line":19,"column":7},"source":"js/index.js","original":{"line":11,"column":9}},{"generated":{"line":19,"column":10},"source":"js/index.js","original":{"line":11,"column":12},"name":"document"},{"generated":{"line":19,"column":18},"source":"js/index.js","original":{"line":11,"column":20}},{"generated":{"line":19,"column":19},"source":"js/index.js","original":{"line":11,"column":21},"name":"querySelector"},{"generated":{"line":19,"column":32},"source":"js/index.js","original":{"line":11,"column":34}},{"generated":{"line":19,"column":33},"source":"js/index.js","original":{"line":11,"column":35}},{"generated":{"line":19,"column":41},"source":"js/index.js","original":{"line":11,"column":43}},{"generated":{"line":19,"column":42},"source":"js/index.js","original":{"line":11,"column":44}},{"generated":{"line":20,"column":0},"source":"js/index.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":4},"source":"js/index.js","original":{"line":13,"column":4},"name":"observer"},{"generated":{"line":20,"column":12},"source":"js/index.js","original":{"line":13,"column":12}},{"generated":{"line":21,"column":0},"source":"js/index.js","original":{"line":15,"column":0},"name":"window"},{"generated":{"line":21,"column":6},"source":"js/index.js","original":{"line":15,"column":6}},{"generated":{"line":21,"column":7},"source":"js/index.js","original":{"line":15,"column":7},"name":"onload"},{"generated":{"line":21,"column":13},"source":"js/index.js","original":{"line":15,"column":13}},{"generated":{"line":21,"column":16},"source":"js/index.js","original":{"line":15,"column":16}},{"generated":{"line":21,"column":28},"source":"js/index.js","original":{"line":15,"column":22}},{"generated":{"line":22,"column":2},"source":"js/index.js","original":{"line":16,"column":1},"name":"loadUsers"},{"generated":{"line":22,"column":11},"source":"js/index.js","original":{"line":16,"column":10}},{"generated":{"line":22,"column":13},"source":"js/index.js","original":{"line":16,"column":12}},{"generated":{"line":23,"column":2},"source":"js/index.js","original":{"line":17,"column":1},"name":"searchBtn"},{"generated":{"line":23,"column":11},"source":"js/index.js","original":{"line":17,"column":10}},{"generated":{"line":23,"column":12},"source":"js/index.js","original":{"line":17,"column":11},"name":"addEventListener"},{"generated":{"line":23,"column":28},"source":"js/index.js","original":{"line":17,"column":27}},{"generated":{"line":23,"column":29},"source":"js/index.js","original":{"line":17,"column":28}},{"generated":{"line":23,"column":36},"source":"js/index.js","original":{"line":17,"column":35}},{"generated":{"line":23,"column":38},"source":"js/index.js","original":{"line":17,"column":37}},{"generated":{"line":23,"column":50},"source":"js/index.js","original":{"line":17,"column":43}},{"generated":{"line":24,"column":4},"source":"js/index.js","original":{"line":18,"column":2},"name":"filter"},{"generated":{"line":24,"column":10},"source":"js/index.js","original":{"line":18,"column":8}},{"generated":{"line":24,"column":11},"source":"js/index.js","original":{"line":18,"column":9},"name":"classList"},{"generated":{"line":24,"column":20},"source":"js/index.js","original":{"line":18,"column":18}},{"generated":{"line":24,"column":21},"source":"js/index.js","original":{"line":18,"column":19},"name":"remove"},{"generated":{"line":24,"column":27},"source":"js/index.js","original":{"line":18,"column":25}},{"generated":{"line":24,"column":28},"source":"js/index.js","original":{"line":18,"column":26}},{"generated":{"line":24,"column":43},"source":"js/index.js","original":{"line":18,"column":41}},{"generated":{"line":24,"column":44},"source":"js/index.js","original":{"line":18,"column":42}},{"generated":{"line":25,"column":4},"source":"js/index.js","original":{"line":19,"column":2},"name":"searchUsers"},{"generated":{"line":25,"column":15},"source":"js/index.js","original":{"line":19,"column":13}},{"generated":{"line":25,"column":17},"source":"js/index.js","original":{"line":19,"column":15}},{"generated":{"line":26,"column":2},"source":"js/index.js","original":{"line":20,"column":1}},{"generated":{"line":26,"column":3},"source":"js/index.js","original":{"line":20,"column":2}},{"generated":{"line":26,"column":4},"source":"js/index.js","original":{"line":20,"column":3}},{"generated":{"line":27,"column":0},"source":"js/index.js","original":{"line":21,"column":0}},{"generated":{"line":27,"column":1},"source":"js/index.js","original":{"line":21,"column":1}},{"generated":{"line":28,"column":0},"source":"js/index.js","original":{"line":21,"column":2}},{"generated":{"line":28,"column":9},"source":"js/index.js","original":{"line":23,"column":15},"name":"addUsers"},{"generated":{"line":28,"column":17},"source":"js/index.js","original":{"line":23,"column":23}},{"generated":{"line":29,"column":2},"source":"js/index.js","original":{"line":23,"column":23}},{"generated":{"line":30,"column":0},"source":"js/index.js","original":{"line":23,"column":23}},{"generated":{"line":31,"column":0},"source":"js/index.js","original":{"line":23,"column":23}},{"generated":{"line":32,"column":2},"source":"js/index.js","original":{"line":23,"column":23}},{"generated":{"line":32,"column":73},"source":"js/index.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":90},"source":"js/index.js","original":{"line":23,"column":24},"name":"start"},{"generated":{"line":32,"column":95},"source":"js/index.js","original":{"line":23,"column":29}},{"generated":{"line":33,"column":4},"source":"js/index.js","original":{"line":23,"column":29}},{"generated":{"line":34,"column":4},"source":"js/index.js","original":{"line":23,"column":29}},{"generated":{"line":35,"column":6},"source":"js/index.js","original":{"line":23,"column":29}},{"generated":{"line":36,"column":8},"source":"js/index.js","original":{"line":23,"column":29}},{"generated":{"line":37,"column":10},"source":"js/index.js","original":{"line":24,"column":7},"name":"limit"},{"generated":{"line":37,"column":15},"source":"js/index.js","original":{"line":24,"column":12}},{"generated":{"line":37,"column":18},"source":"js/index.js","original":{"line":24,"column":15}},{"generated":{"line":37,"column":19},"source":"js/index.js","original":{"line":24,"column":16}},{"generated":{"line":38,"column":10},"source":"js/index.js","original":{"line":24,"column":16}},{"generated":{"line":39,"column":10},"source":"js/index.js","original":{"line":24,"column":16}},{"generated":{"line":39,"column":17},"source":"js/index.js","original":{"line":25,"column":24},"name":"fetch"},{"generated":{"line":39,"column":22},"source":"js/index.js","original":{"line":25,"column":29}},{"generated":{"line":39,"column":68},"source":"js/index.js","original":{"line":25,"column":68},"name":"start"},{"generated":{"line":39,"column":73},"source":"js/index.js","original":{"line":25,"column":73}},{"generated":{"line":39,"column":94},"source":"js/index.js","original":{"line":25,"column":84},"name":"limit"},{"generated":{"line":39,"column":99},"source":"js/index.js","original":{"line":25,"column":89}},{"generated":{"line":39,"column":101},"source":"js/index.js","original":{"line":25,"column":92}},{"generated":{"line":40,"column":8},"source":"js/index.js","original":{"line":25,"column":92}},{"generated":{"line":41,"column":10},"source":"js/index.js","original":{"line":25,"column":7},"name":"response"},{"generated":{"line":41,"column":18},"source":"js/index.js","original":{"line":25,"column":15}},{"generated":{"line":42,"column":10},"source":"js/index.js","original":{"line":25,"column":15}},{"generated":{"line":43,"column":10},"source":"js/index.js","original":{"line":25,"column":15}},{"generated":{"line":43,"column":17},"source":"js/index.js","original":{"line":26,"column":20},"name":"response"},{"generated":{"line":43,"column":25},"source":"js/index.js","original":{"line":26,"column":28}},{"generated":{"line":43,"column":26},"source":"js/index.js","original":{"line":26,"column":29},"name":"json"},{"generated":{"line":43,"column":30},"source":"js/index.js","original":{"line":26,"column":33}},{"generated":{"line":43,"column":32},"source":"js/index.js","original":{"line":26,"column":35}},{"generated":{"line":44,"column":8},"source":"js/index.js","original":{"line":26,"column":35}},{"generated":{"line":45,"column":10},"source":"js/index.js","original":{"line":26,"column":7},"name":"data"},{"generated":{"line":45,"column":14},"source":"js/index.js","original":{"line":26,"column":11}},{"generated":{"line":46,"column":10},"source":"js/index.js","original":{"line":27,"column":1},"name":"data"},{"generated":{"line":46,"column":14},"source":"js/index.js","original":{"line":27,"column":5}},{"generated":{"line":46,"column":15},"source":"js/index.js","original":{"line":27,"column":6},"name":"forEach"},{"generated":{"line":46,"column":22},"source":"js/index.js","original":{"line":27,"column":13}},{"generated":{"line":46,"column":23},"source":"js/index.js","original":{"line":27,"column":14}},{"generated":{"line":46,"column":33},"source":"js/index.js","original":{"line":27,"column":15},"name":"element"},{"generated":{"line":46,"column":40},"source":"js/index.js","original":{"line":27,"column":22}},{"generated":{"line":46,"column":42},"source":"js/index.js","original":{"line":27,"column":27}},{"generated":{"line":47,"column":12},"source":"js/index.js","original":{"line":28,"column":2}},{"generated":{"line":47,"column":16},"source":"js/index.js","original":{"line":29,"column":3},"name":"id"},{"generated":{"line":47,"column":18},"source":"js/index.js","original":{"line":29,"column":5}},{"generated":{"line":47,"column":21},"source":"js/index.js","original":{"line":35,"column":6},"name":"element"},{"generated":{"line":47,"column":28},"source":"js/index.js","original":{"line":35,"column":13}},{"generated":{"line":47,"column":29},"source":"js/index.js","original":{"line":29,"column":3},"name":"id"},{"generated":{"line":47,"column":31},"source":"js/index.js","original":{"line":29,"column":5}},{"generated":{"line":48,"column":14},"source":"js/index.js","original":{"line":30,"column":3},"name":"name"},{"generated":{"line":48,"column":18},"source":"js/index.js","original":{"line":30,"column":7}},{"generated":{"line":48,"column":21},"source":"js/index.js","original":{"line":35,"column":6},"name":"element"},{"generated":{"line":48,"column":28},"source":"js/index.js","original":{"line":35,"column":13}},{"generated":{"line":48,"column":29},"source":"js/index.js","original":{"line":30,"column":3},"name":"name"},{"generated":{"line":48,"column":33},"source":"js/index.js","original":{"line":30,"column":7}},{"generated":{"line":49,"column":14},"source":"js/index.js","original":{"line":31,"column":3},"name":"age"},{"generated":{"line":49,"column":17},"source":"js/index.js","original":{"line":31,"column":6}},{"generated":{"line":49,"column":20},"source":"js/index.js","original":{"line":35,"column":6},"name":"element"},{"generated":{"line":49,"column":27},"source":"js/index.js","original":{"line":35,"column":13}},{"generated":{"line":49,"column":28},"source":"js/index.js","original":{"line":31,"column":3},"name":"age"},{"generated":{"line":49,"column":31},"source":"js/index.js","original":{"line":31,"column":6}},{"generated":{"line":50,"column":14},"source":"js/index.js","original":{"line":32,"column":3},"name":"photo"},{"generated":{"line":50,"column":19},"source":"js/index.js","original":{"line":32,"column":8}},{"generated":{"line":50,"column":22},"source":"js/index.js","original":{"line":35,"column":6},"name":"element"},{"generated":{"line":50,"column":29},"source":"js/index.js","original":{"line":35,"column":13}},{"generated":{"line":50,"column":30},"source":"js/index.js","original":{"line":32,"column":3},"name":"photo"},{"generated":{"line":50,"column":35},"source":"js/index.js","original":{"line":32,"column":8}},{"generated":{"line":51,"column":14},"source":"js/index.js","original":{"line":33,"column":14},"name":"city"},{"generated":{"line":51,"column":18},"source":"js/index.js","original":{"line":33,"column":18}},{"generated":{"line":51,"column":21},"source":"js/index.js","original":{"line":35,"column":6},"name":"element"},{"generated":{"line":51,"column":28},"source":"js/index.js","original":{"line":35,"column":13}},{"generated":{"line":51,"column":29},"source":"js/index.js","original":{"line":33,"column":3},"name":"address"},{"generated":{"line":51,"column":36},"source":"js/index.js","original":{"line":33,"column":10}},{"generated":{"line":51,"column":37},"source":"js/index.js","original":{"line":33,"column":14},"name":"city"},{"generated":{"line":51,"column":41},"source":"js/index.js","original":{"line":33,"column":18}},{"generated":{"line":52,"column":14},"source":"js/index.js","original":{"line":34,"column":3},"name":"website"},{"generated":{"line":52,"column":21},"source":"js/index.js","original":{"line":34,"column":10}},{"generated":{"line":52,"column":24},"source":"js/index.js","original":{"line":35,"column":6},"name":"element"},{"generated":{"line":52,"column":31},"source":"js/index.js","original":{"line":35,"column":13}},{"generated":{"line":52,"column":32},"source":"js/index.js","original":{"line":34,"column":3},"name":"website"},{"generated":{"line":52,"column":39},"source":"js/index.js","original":{"line":34,"column":10}},{"generated":{"line":53,"column":12},"source":"js/index.js","original":{"line":36,"column":2},"name":"users"},{"generated":{"line":53,"column":17},"source":"js/index.js","original":{"line":36,"column":7}},{"generated":{"line":53,"column":18},"source":"js/index.js","original":{"line":36,"column":8},"name":"insertAdjacentHTML"},{"generated":{"line":53,"column":36},"source":"js/index.js","original":{"line":36,"column":26}},{"generated":{"line":53,"column":37},"source":"js/index.js","original":{"line":37,"column":3}},{"generated":{"line":53,"column":48},"source":"js/index.js","original":{"line":37,"column":14}},{"generated":{"line":53,"column":154},"source":"js/index.js","original":{"line":40,"column":38},"name":"id"},{"generated":{"line":53,"column":156},"source":"js/index.js","original":{"line":40,"column":40}},{"generated":{"line":53,"column":190},"source":"js/index.js","original":{"line":41,"column":14},"name":"id"},{"generated":{"line":53,"column":192},"source":"js/index.js","original":{"line":41,"column":16}},{"generated":{"line":53,"column":345},"source":"js/index.js","original":{"line":45,"column":14},"name":"photo"},{"generated":{"line":53,"column":350},"source":"js/index.js","original":{"line":45,"column":19}},{"generated":{"line":53,"column":506},"source":"js/index.js","original":{"line":50,"column":33},"name":"name"},{"generated":{"line":53,"column":510},"source":"js/index.js","original":{"line":50,"column":37}},{"generated":{"line":53,"column":568},"source":"js/index.js","original":{"line":51,"column":31},"name":"age"},{"generated":{"line":53,"column":571},"source":"js/index.js","original":{"line":51,"column":34}},{"generated":{"line":53,"column":641},"source":"js/index.js","original":{"line":52,"column":38},"name":"city"},{"generated":{"line":53,"column":645},"source":"js/index.js","original":{"line":52,"column":42}},{"generated":{"line":53,"column":706},"source":"js/index.js","original":{"line":53,"column":35},"name":"website"},{"generated":{"line":53,"column":713},"source":"js/index.js","original":{"line":53,"column":42}},{"generated":{"line":53,"column":777},"source":"js/index.js","original":{"line":57,"column":3}},{"generated":{"line":54,"column":10},"source":"js/index.js","original":{"line":58,"column":1}},{"generated":{"line":54,"column":11},"source":"js/index.js","original":{"line":58,"column":2}},{"generated":{"line":54,"column":12},"source":"js/index.js","original":{"line":58,"column":3}},{"generated":{"line":55,"column":10},"source":"js/index.js","original":{"line":58,"column":4}},{"generated":{"line":55,"column":43},"source":"js/index.js","original":{"line":59,"column":8}},{"generated":{"line":56,"column":12},"source":"js/index.js","original":{"line":59,"column":10},"name":"hasMore"},{"generated":{"line":56,"column":19},"source":"js/index.js","original":{"line":59,"column":17}},{"generated":{"line":56,"column":21},"source":"js/index.js","original":{"line":59,"column":19},"name":"data"},{"generated":{"line":56,"column":25},"source":"js/index.js","original":{"line":59,"column":23}},{"generated":{"line":56,"column":26},"source":"js/index.js","original":{"line":59,"column":24},"name":"length"},{"generated":{"line":56,"column":32},"source":"js/index.js","original":{"line":59,"column":30}},{"generated":{"line":56,"column":37},"source":"js/index.js","original":{"line":59,"column":35},"name":"limit"},{"generated":{"line":57,"column":10},"source":"js/index.js","original":{"line":59,"column":41}},{"generated":{"line":57,"column":11},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":58,"column":8},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":59,"column":8},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":60,"column":10},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":61,"column":6},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":62,"column":4},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":63,"column":2},"source":"js/index.js","original":{"line":59,"column":42}},{"generated":{"line":63,"column":3},"source":"js/index.js","original":{"line":60,"column":1}},{"generated":{"line":64,"column":2},"source":"js/index.js","original":{"line":60,"column":1}},{"generated":{"line":65,"column":0},"source":"js/index.js","original":{"line":60,"column":1}},{"generated":{"line":66,"column":0},"source":"js/index.js","original":{"line":60,"column":1}},{"generated":{"line":66,"column":9},"source":"js/index.js","original":{"line":62,"column":15},"name":"loadUsers"},{"generated":{"line":66,"column":18},"source":"js/index.js","original":{"line":62,"column":24}},{"generated":{"line":67,"column":2},"source":"js/index.js","original":{"line":62,"column":24}},{"generated":{"line":68,"column":0},"source":"js/index.js","original":{"line":62,"column":24}},{"generated":{"line":69,"column":0},"source":"js/index.js","original":{"line":62,"column":24}},{"generated":{"line":70,"column":2},"source":"js/index.js","original":{"line":62,"column":24}},{"generated":{"line":70,"column":74},"source":"js/index.js","original":{"line":62,"column":0}},{"generated":{"line":71,"column":4},"source":"js/index.js","original":{"line":62,"column":0}},{"generated":{"line":72,"column":4},"source":"js/index.js","original":{"line":62,"column":0}},{"generated":{"line":73,"column":6},"source":"js/index.js","original":{"line":62,"column":0}},{"generated":{"line":74,"column":8},"source":"js/index.js","original":{"line":62,"column":0}},{"generated":{"line":75,"column":10},"source":"js/index.js","original":{"line":62,"column":0}},{"generated":{"line":76,"column":10},"source":"js/index.js","original":{"line":64,"column":2},"name":"spinner"},{"generated":{"line":76,"column":17},"source":"js/index.js","original":{"line":64,"column":9}},{"generated":{"line":76,"column":18},"source":"js/index.js","original":{"line":64,"column":10},"name":"style"},{"generated":{"line":76,"column":23},"source":"js/index.js","original":{"line":64,"column":15}},{"generated":{"line":76,"column":24},"source":"js/index.js","original":{"line":64,"column":16},"name":"display"},{"generated":{"line":76,"column":31},"source":"js/index.js","original":{"line":64,"column":23}},{"generated":{"line":76,"column":34},"source":"js/index.js","original":{"line":64,"column":26}},{"generated":{"line":76,"column":40},"source":"js/index.js","original":{"line":64,"column":32}},{"generated":{"line":77,"column":10},"source":"js/index.js","original":{"line":64,"column":33}},{"generated":{"line":78,"column":10},"source":"js/index.js","original":{"line":64,"column":33}},{"generated":{"line":78,"column":17},"source":"js/index.js","original":{"line":65,"column":28},"name":"addUsers"},{"generated":{"line":78,"column":25},"source":"js/index.js","original":{"line":65,"column":36}},{"generated":{"line":78,"column":26},"source":"js/index.js","original":{"line":65,"column":37}},{"generated":{"line":78,"column":27},"source":"js/index.js","original":{"line":65,"column":38}},{"generated":{"line":78,"column":28},"source":"js/index.js","original":{"line":65,"column":39}},{"generated":{"line":79,"column":8},"source":"js/index.js","original":{"line":65,"column":39}},{"generated":{"line":80,"column":10},"source":"js/index.js","original":{"line":65,"column":39}},{"generated":{"line":81,"column":10},"source":"js/index.js","original":{"line":65,"column":10},"name":"hasMore"},{"generated":{"line":81,"column":17},"source":"js/index.js","original":{"line":65,"column":17}},{"generated":{"line":81,"column":36},"source":"js/index.js","original":{"line":65,"column":10},"name":"hasMore"},{"generated":{"line":81,"column":43},"source":"js/index.js","original":{"line":65,"column":17}},{"generated":{"line":82,"column":10},"source":"js/index.js","original":{"line":66,"column":2}},{"generated":{"line":82,"column":14},"source":"js/index.js","original":{"line":66,"column":6},"name":"hasMore"},{"generated":{"line":82,"column":21},"source":"js/index.js","original":{"line":66,"column":13}},{"generated":{"line":82,"column":23},"source":"js/index.js","original":{"line":66,"column":15}},{"generated":{"line":83,"column":12},"source":"js/index.js","original":{"line":67,"column":3},"name":"observer"},{"generated":{"line":83,"column":20},"source":"js/index.js","original":{"line":67,"column":11}},{"generated":{"line":83,"column":23},"source":"js/index.js","original":{"line":67,"column":14},"name":"observContant"},{"generated":{"line":83,"column":36},"source":"js/index.js","original":{"line":67,"column":27}},{"generated":{"line":83,"column":38},"source":"js/index.js","original":{"line":67,"column":29}},{"generated":{"line":84,"column":10},"source":"js/index.js","original":{"line":68,"column":2}},{"generated":{"line":85,"column":10},"source":"js/index.js","original":{"line":68,"column":3}},{"generated":{"line":86,"column":10},"source":"js/index.js","original":{"line":68,"column":3}},{"generated":{"line":87,"column":8},"source":"js/index.js","original":{"line":68,"column":3}},{"generated":{"line":88,"column":10},"source":"js/index.js","original":{"line":68,"column":3}},{"generated":{"line":89,"column":10},"source":"js/index.js","original":{"line":68,"column":3}},{"generated":{"line":90,"column":10},"source":"js/index.js","original":{"line":70,"column":2},"name":"console"},{"generated":{"line":90,"column":17},"source":"js/index.js","original":{"line":70,"column":9}},{"generated":{"line":90,"column":18},"source":"js/index.js","original":{"line":70,"column":10},"name":"error"},{"generated":{"line":90,"column":23},"source":"js/index.js","original":{"line":70,"column":15}},{"generated":{"line":90,"column":37},"source":"js/index.js","original":{"line":70,"column":22}},{"generated":{"line":91,"column":10},"source":"js/index.js","original":{"line":71,"column":2},"name":"err"},{"generated":{"line":91,"column":13},"source":"js/index.js","original":{"line":71,"column":5}},{"generated":{"line":91,"column":14},"source":"js/index.js","original":{"line":71,"column":6},"name":"style"},{"generated":{"line":91,"column":19},"source":"js/index.js","original":{"line":71,"column":11}},{"generated":{"line":91,"column":20},"source":"js/index.js","original":{"line":71,"column":12},"name":"display"},{"generated":{"line":91,"column":27},"source":"js/index.js","original":{"line":71,"column":19}},{"generated":{"line":91,"column":30},"source":"js/index.js","original":{"line":71,"column":22}},{"generated":{"line":91,"column":36},"source":"js/index.js","original":{"line":71,"column":28}},{"generated":{"line":92,"column":10},"source":"js/index.js","original":{"line":72,"column":2},"name":"err"},{"generated":{"line":92,"column":13},"source":"js/index.js","original":{"line":72,"column":5}},{"generated":{"line":92,"column":14},"source":"js/index.js","original":{"line":72,"column":6},"name":"insertAdjacentHTML"},{"generated":{"line":92,"column":32},"source":"js/index.js","original":{"line":72,"column":24}},{"generated":{"line":92,"column":33},"source":"js/index.js","original":{"line":72,"column":25}},{"generated":{"line":92,"column":45},"source":"js/index.js","original":{"line":72,"column":37}},{"generated":{"line":92,"column":102},"source":"js/index.js","original":{"line":72,"column":92}},{"generated":{"line":93,"column":8},"source":"js/index.js","original":{"line":72,"column":93}},{"generated":{"line":94,"column":10},"source":"js/index.js","original":{"line":72,"column":93}},{"generated":{"line":95,"column":10},"source":"js/index.js","original":{"line":74,"column":2},"name":"spinner"},{"generated":{"line":95,"column":17},"source":"js/index.js","original":{"line":74,"column":9}},{"generated":{"line":95,"column":18},"source":"js/index.js","original":{"line":74,"column":10},"name":"style"},{"generated":{"line":95,"column":23},"source":"js/index.js","original":{"line":74,"column":15}},{"generated":{"line":95,"column":24},"source":"js/index.js","original":{"line":74,"column":16},"name":"display"},{"generated":{"line":95,"column":31},"source":"js/index.js","original":{"line":74,"column":23}},{"generated":{"line":95,"column":34},"source":"js/index.js","original":{"line":74,"column":26}},{"generated":{"line":95,"column":40},"source":"js/index.js","original":{"line":74,"column":32}},{"generated":{"line":96,"column":10},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":97,"column":8},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":98,"column":8},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":99,"column":10},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":100,"column":6},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":101,"column":4},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":102,"column":2},"source":"js/index.js","original":{"line":74,"column":33}},{"generated":{"line":102,"column":3},"source":"js/index.js","original":{"line":76,"column":1}},{"generated":{"line":103,"column":2},"source":"js/index.js","original":{"line":76,"column":1}},{"generated":{"line":104,"column":0},"source":"js/index.js","original":{"line":76,"column":1}},{"generated":{"line":105,"column":0},"source":"js/index.js","original":{"line":76,"column":1}},{"generated":{"line":105,"column":9},"source":"js/index.js","original":{"line":78,"column":15},"name":"loadMoreUsers"},{"generated":{"line":105,"column":22},"source":"js/index.js","original":{"line":78,"column":28}},{"generated":{"line":106,"column":2},"source":"js/index.js","original":{"line":78,"column":28}},{"generated":{"line":107,"column":0},"source":"js/index.js","original":{"line":78,"column":28}},{"generated":{"line":108,"column":0},"source":"js/index.js","original":{"line":78,"column":28}},{"generated":{"line":109,"column":2},"source":"js/index.js","original":{"line":78,"column":28}},{"generated":{"line":109,"column":78},"source":"js/index.js","original":{"line":78,"column":0}},{"generated":{"line":110,"column":4},"source":"js/index.js","original":{"line":78,"column":0}},{"generated":{"line":111,"column":4},"source":"js/index.js","original":{"line":78,"column":0}},{"generated":{"line":112,"column":6},"source":"js/index.js","original":{"line":78,"column":0}},{"generated":{"line":113,"column":8},"source":"js/index.js","original":{"line":78,"column":0}},{"generated":{"line":114,"column":10},"source":"js/index.js","original":{"line":78,"column":0}},{"generated":{"line":115,"column":10},"source":"js/index.js","original":{"line":80,"column":2},"name":"contantSpinner"},{"generated":{"line":115,"column":24},"source":"js/index.js","original":{"line":80,"column":16}},{"generated":{"line":115,"column":25},"source":"js/index.js","original":{"line":80,"column":17},"name":"style"},{"generated":{"line":115,"column":30},"source":"js/index.js","original":{"line":80,"column":22}},{"generated":{"line":115,"column":31},"source":"js/index.js","original":{"line":80,"column":23},"name":"height"},{"generated":{"line":115,"column":37},"source":"js/index.js","original":{"line":80,"column":29}},{"generated":{"line":115,"column":40},"source":"js/index.js","original":{"line":80,"column":32}},{"generated":{"line":115,"column":46},"source":"js/index.js","original":{"line":80,"column":38}},{"generated":{"line":116,"column":10},"source":"js/index.js","original":{"line":80,"column":39}},{"generated":{"line":117,"column":10},"source":"js/index.js","original":{"line":80,"column":39}},{"generated":{"line":117,"column":17},"source":"js/index.js","original":{"line":81,"column":28},"name":"addUsers"},{"generated":{"line":117,"column":25},"source":"js/index.js","original":{"line":81,"column":36}},{"generated":{"line":117,"column":26},"source":"js/index.js","original":{"line":81,"column":37},"name":"usersOnLoad"},{"generated":{"line":117,"column":37},"source":"js/index.js","original":{"line":81,"column":48}},{"generated":{"line":117,"column":38},"source":"js/index.js","original":{"line":81,"column":49},"name":"length"},{"generated":{"line":117,"column":44},"source":"js/index.js","original":{"line":81,"column":55}},{"generated":{"line":117,"column":45},"source":"js/index.js","original":{"line":81,"column":56}},{"generated":{"line":118,"column":8},"source":"js/index.js","original":{"line":81,"column":56}},{"generated":{"line":119,"column":10},"source":"js/index.js","original":{"line":81,"column":56}},{"generated":{"line":120,"column":10},"source":"js/index.js","original":{"line":81,"column":10},"name":"hasMore"},{"generated":{"line":120,"column":17},"source":"js/index.js","original":{"line":81,"column":17}},{"generated":{"line":120,"column":37},"source":"js/index.js","original":{"line":81,"column":10},"name":"hasMore"},{"generated":{"line":120,"column":44},"source":"js/index.js","original":{"line":81,"column":17}},{"generated":{"line":121,"column":10},"source":"js/index.js","original":{"line":82,"column":2}},{"generated":{"line":121,"column":14},"source":"js/index.js","original":{"line":82,"column":6}},{"generated":{"line":121,"column":15},"source":"js/index.js","original":{"line":82,"column":7},"name":"hasMore"},{"generated":{"line":121,"column":22},"source":"js/index.js","original":{"line":82,"column":14}},{"generated":{"line":121,"column":26},"source":"js/index.js","original":{"line":82,"column":18},"name":"observer"},{"generated":{"line":121,"column":34},"source":"js/index.js","original":{"line":82,"column":26}},{"generated":{"line":121,"column":36},"source":"js/index.js","original":{"line":82,"column":28}},{"generated":{"line":122,"column":12},"source":"js/index.js","original":{"line":83,"column":3},"name":"observer"},{"generated":{"line":122,"column":20},"source":"js/index.js","original":{"line":83,"column":11}},{"generated":{"line":122,"column":21},"source":"js/index.js","original":{"line":83,"column":12},"name":"disconnect"},{"generated":{"line":122,"column":31},"source":"js/index.js","original":{"line":83,"column":22}},{"generated":{"line":122,"column":33},"source":"js/index.js","original":{"line":83,"column":24}},{"generated":{"line":123,"column":10},"source":"js/index.js","original":{"line":84,"column":2}},{"generated":{"line":124,"column":10},"source":"js/index.js","original":{"line":84,"column":3}},{"generated":{"line":125,"column":10},"source":"js/index.js","original":{"line":84,"column":3}},{"generated":{"line":126,"column":8},"source":"js/index.js","original":{"line":84,"column":3}},{"generated":{"line":127,"column":10},"source":"js/index.js","original":{"line":84,"column":3}},{"generated":{"line":128,"column":10},"source":"js/index.js","original":{"line":84,"column":3}},{"generated":{"line":129,"column":10},"source":"js/index.js","original":{"line":86,"column":2},"name":"console"},{"generated":{"line":129,"column":17},"source":"js/index.js","original":{"line":86,"column":9}},{"generated":{"line":129,"column":18},"source":"js/index.js","original":{"line":86,"column":10},"name":"error"},{"generated":{"line":129,"column":23},"source":"js/index.js","original":{"line":86,"column":15}},{"generated":{"line":129,"column":37},"source":"js/index.js","original":{"line":86,"column":22}},{"generated":{"line":130,"column":8},"source":"js/index.js","original":{"line":86,"column":23}},{"generated":{"line":131,"column":10},"source":"js/index.js","original":{"line":86,"column":23}},{"generated":{"line":132,"column":10},"source":"js/index.js","original":{"line":88,"column":2},"name":"contantSpinner"},{"generated":{"line":132,"column":24},"source":"js/index.js","original":{"line":88,"column":16}},{"generated":{"line":132,"column":25},"source":"js/index.js","original":{"line":88,"column":17},"name":"style"},{"generated":{"line":132,"column":30},"source":"js/index.js","original":{"line":88,"column":22}},{"generated":{"line":132,"column":31},"source":"js/index.js","original":{"line":88,"column":23},"name":"height"},{"generated":{"line":132,"column":37},"source":"js/index.js","original":{"line":88,"column":29}},{"generated":{"line":132,"column":40},"source":"js/index.js","original":{"line":88,"column":32}},{"generated":{"line":132,"column":43},"source":"js/index.js","original":{"line":88,"column":35}},{"generated":{"line":133,"column":10},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":134,"column":8},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":135,"column":8},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":136,"column":10},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":137,"column":6},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":138,"column":4},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":139,"column":2},"source":"js/index.js","original":{"line":88,"column":36}},{"generated":{"line":139,"column":3},"source":"js/index.js","original":{"line":90,"column":1}},{"generated":{"line":140,"column":2},"source":"js/index.js","original":{"line":90,"column":1}},{"generated":{"line":141,"column":0},"source":"js/index.js","original":{"line":90,"column":1}},{"generated":{"line":142,"column":0},"source":"js/index.js","original":{"line":92,"column":0}},{"generated":{"line":142,"column":9},"source":"js/index.js","original":{"line":92,"column":9},"name":"observContant"},{"generated":{"line":142,"column":22},"source":"js/index.js","original":{"line":92,"column":22}},{"generated":{"line":142,"column":25},"source":"js/index.js","original":{"line":92,"column":25}},{"generated":{"line":143,"column":2},"source":"js/index.js","original":{"line":93,"column":1}},{"generated":{"line":143,"column":6},"source":"js/index.js","original":{"line":93,"column":7},"name":"observer"},{"generated":{"line":143,"column":14},"source":"js/index.js","original":{"line":93,"column":15}},{"generated":{"line":143,"column":17},"source":"js/index.js","original":{"line":93,"column":18}},{"generated":{"line":143,"column":21},"source":"js/index.js","original":{"line":93,"column":22},"name":"IntersectionObserver"},{"generated":{"line":143,"column":41},"source":"js/index.js","original":{"line":93,"column":42}},{"generated":{"line":143,"column":42},"source":"js/index.js","original":{"line":93,"column":43}},{"generated":{"line":143,"column":58},"source":"js/index.js","original":{"line":93,"column":69}},{"generated":{"line":144,"column":4},"source":"js/index.js","original":{"line":93,"column":69}},{"generated":{"line":145,"column":6},"source":"js/index.js","original":{"line":93,"column":47},"name":"isIntersecting"},{"generated":{"line":145,"column":20},"source":"js/index.js","original":{"line":93,"column":61}},{"generated":{"line":145,"column":32},"source":"js/index.js","original":{"line":93,"column":47},"name":"isIntersecting"},{"generated":{"line":145,"column":46},"source":"js/index.js","original":{"line":93,"column":61}},{"generated":{"line":146,"column":4},"source":"js/index.js","original":{"line":94,"column":2}},{"generated":{"line":146,"column":8},"source":"js/index.js","original":{"line":94,"column":6},"name":"isIntersecting"},{"generated":{"line":146,"column":22},"source":"js/index.js","original":{"line":94,"column":20}},{"generated":{"line":146,"column":24},"source":"js/index.js","original":{"line":94,"column":22}},{"generated":{"line":147,"column":6},"source":"js/index.js","original":{"line":95,"column":3},"name":"loadMoreUsers"},{"generated":{"line":147,"column":19},"source":"js/index.js","original":{"line":95,"column":16}},{"generated":{"line":147,"column":21},"source":"js/index.js","original":{"line":95,"column":18}},{"generated":{"line":148,"column":4},"source":"js/index.js","original":{"line":96,"column":2}},{"generated":{"line":149,"column":2},"source":"js/index.js","original":{"line":97,"column":1}},{"generated":{"line":149,"column":3},"source":"js/index.js","original":{"line":97,"column":2}},{"generated":{"line":149,"column":4},"source":"js/index.js","original":{"line":97,"column":3}},{"generated":{"line":150,"column":2},"source":"js/index.js","original":{"line":98,"column":1},"name":"observer"},{"generated":{"line":150,"column":10},"source":"js/index.js","original":{"line":98,"column":9}},{"generated":{"line":150,"column":11},"source":"js/index.js","original":{"line":98,"column":10},"name":"observe"},{"generated":{"line":150,"column":18},"source":"js/index.js","original":{"line":98,"column":17}},{"generated":{"line":150,"column":19},"source":"js/index.js","original":{"line":98,"column":18},"name":"contantSpinner"},{"generated":{"line":150,"column":33},"source":"js/index.js","original":{"line":98,"column":32}},{"generated":{"line":150,"column":34},"source":"js/index.js","original":{"line":98,"column":33}},{"generated":{"line":151,"column":2},"source":"js/index.js","original":{"line":99,"column":1}},{"generated":{"line":151,"column":9},"source":"js/index.js","original":{"line":99,"column":8},"name":"observer"},{"generated":{"line":151,"column":17},"source":"js/index.js","original":{"line":99,"column":16}},{"generated":{"line":152,"column":0},"source":"js/index.js","original":{"line":100,"column":0}}],"sources":{"js/index.js":"'use strict';\r\n\r\n\r\n\r\nconst users = document.querySelector('.users');\r\nconst filterUsersContainer = document.querySelector('.users-filter-contant');\r\nconst usersOnLoad = document.getElementsByClassName('users__link');\r\nconst searchBtn = document.querySelector('.search-btn');\r\nconst spinner = document.querySelector('.lds-default');\r\nconst contantSpinner = document.querySelector('.load-contant');\r\nconst err = document.querySelector('.error');\r\n\r\nlet observer;\r\n\r\nwindow.onload = () => {\r\n\tloadUsers();\r\n\tsearchBtn.addEventListener('click', () => {\r\n\t\tfilter.classList.remove('filter_active');\r\n\t\tsearchUsers();\r\n\t});\r\n};\r\n\r\nasync function addUsers(start) {\r\n\tconst limit = 8;\r\n\tconst response = await fetch(`http://localhost:3000/users?_start=${start}&_limit=${limit}`);\r\n\tconst data = await response.json();\r\n\tdata.forEach((element) => {\r\n\t\tconst {\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tage,\r\n\t\t\tphoto,\r\n\t\t\taddress: { city },\r\n\t\t\twebsite,\r\n\t\t} = element;\r\n\t\tusers.insertAdjacentHTML(\r\n\t\t\t'beforeend',\r\n\t\t\t`<a class=\"users__link\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\thref=\"./pages/user-page.html?id=${id}\">\r\n\t\t\t\t<div id=${id} class=\"users__item\">\r\n\t\t\t\t\t<div class=\"users__header\">\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclass=\"users__img\"\r\n\t\t\t\t\t\t\tsrc=\"${photo}\"\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"users__main\">\r\n\t\t\t\t\t\t\t<h4 class=\"users__name\">${name}</h4>\r\n\t\t\t\t\t\t\t<p class=\"users__age\">${age} y. o.</p>\r\n\t\t\t\t\t\t\t<p class=\"users__city\">City: ${city}</p>\r\n\t\t\t\t\t\t\t<p class=\"users__website\">${website}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</a>`,\r\n\t\t);\r\n\t});\r\n\treturn { hasMore: data.length === limit };\r\n}\r\n\r\nasync function loadUsers() {\r\n\ttry {\r\n\t\tspinner.style.display = 'flex';\r\n\t\tconst { hasMore } = await addUsers(0);\r\n\t\tif (hasMore) {\r\n\t\t\tobserver = observContant();\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t\terr.style.display = 'flex';\r\n\t\terr.insertAdjacentHTML('afterbegin', `<h4 class=\"error-text\">Error: Users not found</h4>`);\r\n\t} finally {\r\n\t\tspinner.style.display = 'none';\r\n\t}\r\n}\r\n\r\nasync function loadMoreUsers() {\r\n\ttry {\r\n\t\tcontantSpinner.style.height = 'auto';\r\n\t\tconst { hasMore } = await addUsers(usersOnLoad.length);\r\n\t\tif (!hasMore && observer) {\r\n\t\t\tobserver.disconnect();\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t} finally {\r\n\t\tcontantSpinner.style.height = '0';\r\n\t}\r\n}\r\n\r\nfunction observContant() {\r\n\tconst observer = new IntersectionObserver(([{ isIntersecting }]) => {\r\n\t\tif (isIntersecting) {\r\n\t\t\tloadMoreUsers();\r\n\t\t}\r\n\t});\r\n\tobserver.observe(contantSpinner);\r\n\treturn observer;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"bf38b69b2c37d24ce20c6795cf5546dc","cacheData":{"env":{}}}